###############################################################################
# PACKAGING
###############################################################################

# PACKAGING OPTIONS: GENERAL

set(CPACK_SET_DESTDIR TRUE) # Enabling absolute paths for CPack (important!)
set(CPACK_SOURCE_GENERATOR "TGZ") # This file format is used to package source code ("make package_source")
set(CPACK_INSTALL_CMAKE_PROJECTS "${CMAKE_CURRENT_BINARY_DIR};${CMAKE_PROJECT_NAME};ALL;/")
set(CPACK_PACKAGE_VENDOR "Percolator")
set(CPACK_PACKAGE_NAME ${PACKAGE_NICKNAME})
set(CPACK_PACKAGE_DESCRIPTION_FILE "${PERCOLATOR_SOURCE_DIR}/src/README")
set(CPACK_RESOURCE_FILE_LICENSE "${PERCOLATOR_SOURCE_DIR}/src/COPYING")
set(PERLUQVAL_VERSION "v${CPACK_PACKAGE_VERSION_MAJOR}-${CPACK_PACKAGE_VERSION_MINOR}")

IF(APPLE)
	set(CPACK_GENERATOR "TGZ;TBZ2;OSXX11")
        set(CPACK_PACKAGE_FILE_NAME "${PACKAGE_NICKNAME}-${PERLUQVAL_VERSION}-osx-${TARGET_ARCH}")
        set(CPACK_SOURCE_PACKAGE_FILE_NAME  "${PACKAGE_NICKNAME}-${PERLUQVAL_VERSION}-osx-src")
#	set(CMAKE_OSX_ARCHITECTURES "x86_64" ${TARGET_ARCH} CACHE STRING "Build architectures for OSX" FORCE)
	set(CMAKE_OSX_ARCHITECTURES "x86_64" ${TARGET_ARCH} CACHE STRING "Build architectures for OSX" FORCE)
        set(MACOSX_BUNDLE_BUNDLE_NAME ${PACKAGE_NICKNAME})
        set(MACOSX_BUNDLE_BUNDLE_VERSION ${VERSION})
        set(MACOSX_BUNDLE_SHORT_VERSION_STRING ${VERSION})
        set(MACOSX_BUNDLE_LONG_VERSION_STRING "Version ${VERSION}")
	set(CPACK_PACKAGE_ICON "${PERCOLATOR_SOURCE_DIR}/admin/win/nsi/percolator.ico")
	set(CPACK_BUNDLE_NAME ${PACKAGE_NICKNAME})
	set(CPACK_BUNDLE_ICON "${PERCOLATOR_SOURCE_DIR}/admin/win/nsi/percolator.ico")
	set(CPACK_BUNDLE_STARTUP_COMMAND "${PERCOLATOR_SOURCE_DIR}/mac_post_script.sh")
elseif(UNIX)
#	set(CPACK_GENERATOR "DEB;RPM") # Distribution packaging formats ("make package") overided later
        set(CPACK_PACKAGE_FILE_NAME "${PACKAGE_NICKNAME}-${PERLUQVAL_VERSION}-linux-${TARGET_ARCH}")
        set(CPACK_SOURCE_PACKAGE_FILE_NAME  "${PACKAGE_NICKNAME}-${PERLUQVAL_VERSION}-linux-src")
elseif(MINGW)
        set(CPACK_SET_DESTDIR FALSE)
	set(CPACK_GENERATOR "NSIS") # Distribution packaging formats ("make package")
        set(CPACK_PACKAGE_FILE_NAME "${PACKAGE_NICKNAME}-${PERLUQVAL_VERSION}-${MINGW_PACK_NAME}")
        set(CPACK_NSIS_PACKAGE_NAME "${PACKAGE_NICKNAME}-${PERLUQVAL_VERSION}")
        set(CPACK_NSIS_MODIFY_PATH "ON")
        set(CPACK_PACKAGE_ICON "${PERCOLATOR_SOURCE_DIR}/admin/win/nsi/page_header.bmp")
        set(CPACK_NSIS_MUI_ICON "${PERCOLATOR_SOURCE_DIR}/admin/win/nsi/percolator.ico")
        set(CPACK_NSIS_CONTACT "Lukas Kall <lukas.kall@scilifelab.se>")

endif()

if(UNIX)
  if(CMAKE_SYSTEM_NAME MATCHES "Linux")
    set(SPECIFIC_SYSTEM_VERSION_NAME "${CMAKE_SYSTEM_NAME}")
    set(CPACK_GENERATOR "TGZ")
    if(EXISTS "/etc/issue")
      set(LINUX_NAME "")
      file(READ "/etc/issue" LINUX_ISSUE)
      # Fedora case
      if(LINUX_ISSUE MATCHES "Fedora")
        string(REGEX MATCH "release ([0-9]+)" FEDORA "${LINUX_ISSUE}")
        set(LINUX_NAME "FC${CMAKE_MATCH_1}")  
        set(CPACK_GENERATOR "RPM")      
      endif(LINUX_ISSUE MATCHES "Fedora")
      # Red Hat case
      if(LINUX_ISSUE MATCHES "Red")
        string(REGEX MATCH "Red Hat" ${LINUX_ISSUE}")
        set(LINUX_NAME "RHEL_${CMAKE_MATCH_1}")  
        set(CPACK_GENERATOR "RPM")      
      endif(LINUX_ISSUE MATCHES "Red")
      # Ubuntu case
      if(LINUX_ISSUE MATCHES "Ubuntu")
        string(REGEX MATCH "buntu ([0-9]+\\.[0-9]+)" UBUNTU "${LINUX_ISSUE}")
        set(LINUX_NAME "Ubuntu_${CMAKE_MATCH_1}")        
        set(CPACK_GENERATOR "DEB")
      endif(LINUX_ISSUE MATCHES "Ubuntu")
      # Debian case
      if(LINUX_ISSUE MATCHES "Debian")
        string(REGEX MATCH "Debian .*ux ([a-zA-Z]*/?[a-zA-Z]*) .*" DEBIAN "${LINUX_ISSUE}")
        set(LINUX_NAME "Debian_${CMAKE_MATCH_1}")
        string(REPLACE "/" "_" LINUX_NAME ${LINUX_NAME}) 
        set(CPACK_GENERATOR "DEB")       
      endif(LINUX_ISSUE MATCHES "Debian")      
      # Open SuSE case
      if(LINUX_ISSUE MATCHES "SUSE")
        string(REGEX MATCH "SUSE  ([0-9]+\\.[0-9]+)" SUSE "${LINUX_ISSUE}")
        set(LINUX_NAME "openSUSE_${CMAKE_MATCH_1}")
        string(REPLACE "/" "_" LINUX_NAME ${LINUX_NAME})   
        set(CPACK_GENERATOR "RPM")     
      endif(LINUX_ISSUE MATCHES "SUSE")
    endif(EXISTS "/etc/issue")      
  endif(CMAKE_SYSTEM_NAME MATCHES "Linux")
endif(UNIX)


set(CPACK_PACKAGE_INSTALL_DIRECTORY "${PACKAGE_NICKNAME}-${PERLUQVAL_VERSION}")
set(CPACK_STRIP_FILES TRUE)

file(GLOB_RECURSE DOT_FILES_BEGIN ".*") # To be ignored by Cpack
file(GLOB_RECURSE TILD_FILES "*~*") # To be ignored by Cpack

set(CPACK_SOURCE_IGNORE_FILES "/CVS/;/.svn/;/.swp$/;cscope.*;/.git/;${CMAKE_CURRENT_BINARY_DIR}/;/.bzr/;/.settings/;${DOT_FILES_BEGIN};${TILD_FILES}")

if( CMAKE_INSTALL_SYSTEM_RUNTIME_LIBS )
    install( PROGRAMS ${CMAKE_INSTALL_SYSTEM_RUNTIME_LIBS} DESTINATION bin COMPONENT System )
endif( CMAKE_INSTALL_SYSTEM_RUNTIME_LIBS )

# PACKAGING OPTIONS: DEB
set(CPACK_DEBIAN_PACKAGE_MAINTAINER "Lukas Kall <lukas.kall@scilifelab.se>")
set(CPACK_DEBIAN_PACKAGE_ARCHITECTURE ${TARGET_ARCH})


# PACKAGING OPTIONS: RPM
set(CPACK_RPM_PACKAGE_LICENSE "Apache 2.0 license")
set(CPACK_RPM_PACKAGE_VENDOR "Percolator")
set(CPACK_RPM_PACKAGE_GROUP "Applications/Engineering")
set(CPACK_RPM_PACKAGE_RELOCATABLE FALSE)
