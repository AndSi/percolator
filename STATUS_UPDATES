--- March 23, 2010 ---
* Installation/building procedure has been changed for both master and lumi branches.
* Some minor changes in lumi branch (astyle coding style conversion and isolation of Elude build).
* CTest system-level testing functionality added
* Google C++ Testing Framework unit-level functionality added
* Some changes in documentation

--- March 3, 2010 ---

* .gitignore is added to a commit.
* Eclipse CDT projects are created that have 1-click build procedure and debug solution based on existing sources
(documentation for the creation of such projects is created).
* rtPredictor is renamed to Elude and is separated to 'elude' folder from the percolator in the same way as qvality did.
* Test folder is added for use with CPack.
* Minor code changes added.
* This status updates file is added.
* ChangeLog is reverted.

--- March 2, 2010 ---

Lumi's branch has now been updated with CMake and other stuff which is described in this mail history applicable for original percolator project.

Building, installation, packaging, etc. has been tested.

For example, the output for the Wiki example http://wiki.github.com/percolator/percolator/example is evaluated.
Stdout file is attached which shows, e.g. satisfaction for:
  "1. The weight of the absdM is negative – indicative that large differences between observed and calculated mass gives a worse score – that is good
   2. We estimate that 81.5% of the PSMs are incorrect matches"

Any branch(e.g. master or lumi) can be obtained from github from scratch using following commands in some empty folder, for example, for lumi branch:

git init
git remote add -t lumi some_alias git@github.com:percolator/percolator.git
git pull some_alias

Or if old branch exists locally, in order to make the local copy up-to-date to remote branch (!!! all local changes will be discarded !!!): git checkout -f

Lumi please build and test the updated version using the instructions provided in INSTALL and README files.
And please write me if you have any questions or something simply does not work or you need help in adopting your development environment.

Hope that everything will go smoothly for you.

PS: Use case when CMake & GIT are installed, building luminator from scratch:

mkdir empty_folder
cd empty_folder
git init
git remote add -t lumi some_alias git@github.com:percolator/percolator.git
git pull some_alias
cd build_here
cmake ..
sudo make install
luminator <paramaters>

--- March 1, 2010 ---

1. Packaging, installation, proper building, etc.
However, I a bit disappointed in CMake-CPack undocumented behavior - it took a lot of time digging how to make it produce what i wanted.

2. Github repository is now updated with the latest state i have locally. Repository also should be clean now. However, please point if you missing something there.
I tested several conditions, like cloning current master branch, building, installing, etc. - everything should work. I will really appreciate if you can try it once..
Also please look through the repository in general and point on things that should be changed.

3. XML match records file is proposed and attached to this e-mail. Looking forward to see your comments...

4. Minor fixes like READMEs, descriptions, tests, etc.



--- February 27, 2010 ---

1. Autoconf/Automake source building system has been replaced by CMake.
During the replacement process some minor code changes were made (to succeed the compilation process).
Previous established Autoconf/Automake infrastructure has been removed completely.
Building flags and definitions has been saved and adopted with CMake.

2. Building process is "out-of-source"(in separate 'build' folder) and has been explained in INSTALL file.

3. Qvality sources now are separated from the main percolator directory.
During the Percolator building process a temporary static library which is used by Qvality
(in order to save compilation time since Qvality is dependent on many sources used for Percolator).
A drawback here is that size of the Qvality executable is slightly increased in size.

4. Both Debug and Release building versions are supported.
Instructions for using either of build configurations is explained in INSTALL file.
Currently installation(make install) is done by creating a folder 'bin' where
Percolator and Qvality executables are copied.

5. Google C++ style formatting has been applied to the Percolator and Qvality.
3rd party sources are not affected.

6. Packaging into archive for distribution (like RPM/DEB/etc) is partly written in support with CPack.
