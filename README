Percolator and Qvality software package for protein classification.
June 2011
Lukas KÃ¤ll <lukas.kall@scilifelab.se>

DOWNLOAD, INSTALL AND TEST
The latest release of Percolator is available at the downloads page:
https://github.com/percolator/percolator/downloads
There you may find package for Linux and compiled executables for Win32. Source
bundles are available to build Percolator from scratch if you are running a
different system or if you do not have superuser privileges.


***


INSTALLING PERCOLATOR (from packages or installer)

Linux
Download the appropriate package from the downloads page mentioned above: 
  ".deb" packages are available for Debian distributions (such as Ubuntu)
  ".rpm" packages are available for Red Hat (such as CentOS).
For Debian distributions (e.g. Ubuntu), issue the following command in the 
directory where the package has been downloaded:
  $ sudo dpkg -i [pacakge].deb
For Red Hat (e.g. CentOS), issue:
  $ su
  $ rpm -ivh [package].rpm
If dependency problems arise, you might have to compile and manually install 
some of the libraries on your system to match the version required, as your 
package manager might be providing an old version. The Debian package has been
tested on Ubuntu 10.04 and 10.10 and will install flawlessly. Ubuntu 9.10, 
though, will require you to manually install:
  libxerces-c3.1.so
Similarly, under CentOS5.5, you'll need:
  libxerces-c3.1.so
  libstdc++.so.6
  libtokyocabinet.so.8
  libsqlite3-devel.so


Windows
Percolator has been tested on Windows XP SP2, Windows Vista and Window 7.
Download the Windows installer, double click and follow the installation 
procedure. Once completed, open a DOS prompt and invoke Percolator from the 
directory where it was installed. 


***


BUILDING PERCOLATOR (from the latest snapshot or the repository)

*** READ THIS CAREFULLY: you MUST install the required libraries! ***
The following instructions are for Linux Ubuntu (versions 10.04 and 10.10).
Make, Cmake and a C++ compiler are required; the following libraries are also
needed to build Percolator: libxerces-c-dev, libboost-dev, libsqlite3-dev, 
gengetopt.
Download the latest [tar-ball].tar.gz and decompress it; we will refer to the 
generated directory as "/path/to/source". You can now install all the library 
mentioned above with the command:
  $ cd /path/to/source; 
  $ ./install/get_packages_ubuntu.sh
The script will terminate by printing a string to cout; we will refer to that
string as "/prefix/path".
If you do not have sudo permissions, you will not be able to run the script
mentioned above; in that case you will have to manually install the required 
libraries. The same goes for older versions of Ubuntu and other operating 
systems (as explained above in the section "INSTALLING PERCOLATOR").
We will now proceeed to build percolator in /tmp, but any directory where the
user has read/write privileges can be chosen. Issue the following:
  $ mkdir /tmp/percolatorBuild; cd /tmp/percolatorBuild
  $ cmake -DCMAKE_PREFIX_PATH="/prefix/path" -DCMAKE_INSTALL_PREFIX="/tmp" \
    [-G"Eclipse CDT4 - Unix Makefiles"] [-DCMAKE_BUILD_TYPE="Debug"] \
    /path/to/source
  $ make -j8; make install

Advanced users (and developers) may clone the project with Git by issuing:
$ git clone git://github.com/percolator/percolator
This will create a directory called "percolator" that is to be used as 
/path/to/source in the instructions above


***


TESTING PERCOLATOR

In order to be able to properly execute the tests, the following are require:
  python 2.6 interpreter 
  xmllint. 
Those are not stated among the requirements in "BUILDING PERCOLATOR" since a 
working version of the software can be compiled without them.
Assuming Percolator has been installed as explained above, it can be 
automatically tested by issuing:
  $ cd /tmp/percolatorBuild
  $ make test
If errors are encountered, the directory /tmp/percolatorBuild/Testing/ will
contain log files that can be used to debug the problem.
